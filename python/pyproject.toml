[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sap-mcp-server"
version = "1.0.0"
description = "SAP GUI automation MCP server"
authors = [
    {name = "SAP Automation Team", email = "team@example.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.2.0",
    "anyio>=4.0.0",
    "pydantic>=2.0.0",
    "click>=8.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]

[project.scripts]
sap-mcp-server = "sap_mcp_server.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/sap_mcp_server"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "README.md",
    "LICENSE"
]

[tool.ruff]
line-length = 100
target-version = "py310"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
